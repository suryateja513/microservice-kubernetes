name: microservice-kubernetes-docker-compose

on:
  push:
    branches:
      - teja

jobs:
  microservices-docker-compose:
    runs-on: ubuntu-latest
    steps:

      - name: "Checkout to Branch"
        uses: actions/checkout@v4

      - name: "Install Java"
        uses: actions/setup-java@v4
        with:
          distribution: 'zulu'
          java-version: 17

      - name: "Install maven"
        uses: stCarolas/setup-maven@v5
        with:
          maven-version: 3.8.2

      - name: "Build JAR file for kubernetes-demo-catalog"
        run: |
          #!/bin/bash
          mvn package --file ./microservice-kubernetes-demo/microservice-kubernetes-demo-catalog/pom.xml
        shell: bash

      - name: "Build JAR file for kubernetes-demo-customer"
        run: |
          #!/bin/bash
          mvn package --file ./microservice-kubernetes-demo/microservice-kubernetes-demo-customer/pom.xml
        shell: bash

      - name: "Build JAR file for kubernetes-demo-order"
        run: |
          #!/bin/bash
          mvn package --file ./microservice-kubernetes-demo/microservice-kubernetes-demo-order/pom.xml
        shell: bash

      - name: "Install GCP SDK"
        uses: google-github-actions/setup-gcloud@v2

      - name: "Configure GCP SA"
        uses: google-github-actions/auth@v2
        with:
          credentials_json: ${{ secrets.SA }}

      - name: "Configure Docker"
        run: |
          #!/bin/bash
          gcloud auth configure-docker us-central1-docker.pkg.dev
        shell: bash

      - name: "Install Docker-compose"
        run: |
          #!/bin/bash
          sudo curl -L "https://github.com/docker/compose/releases/download/1.29.2/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
          sudo chmod +x /usr/local/bin/docker-compose
        shell: bash

      - name: "Build Docker-Compose-Images"
        run: |
          #!/bin/bash
          docker-compose -f docker-compose.yaml build
        shell: bash

      - name: "Tag and push images"
        run: |
          #!/bin/bash
          docker tag demo-catalog us-central1-docker.pkg.dev/pelagic-arch-447215-p4/surya-artifact/demo-catalog:latest
          docker push us-central1-docker.pkg.dev/pelagic-arch-447215-p4/surya-artifact/demo-catalog:latest
          
          docker tag demo-customer us-central1-docker.pkg.dev/pelagic-arch-447215-p4/surya-artifact/demo-customer:latest
          docker push us-central1-docker.pkg.dev/pelagic-arch-447215-p4/surya-artifact/demo-customer:latest
          
          docker tag demo-order us-central1-docker.pkg.dev/pelagic-arch-447215-p4/surya-artifact/demo-order:latest
          docker push us-central1-docker.pkg.dev/pelagic-arch-447215-p4/surya-artifact/demo-order:latest

        shell: bash

      - name: "Configure K8"
        run: |
          #!/bin/bash
          gcloud components install kubectl gke-gcloud-auth-plugin 
          gcloud config set project pelagic-arch-447215-p4
          gcloud config set compute/region us-central1
          gcloud container clusters get-credentials surya-gke-cluster --region=us-central1
          
          kubectl version --client
        shell: bash

      - name: "Deploy K8"
        run: |
          #!/bin/bash
          kubectl apply -f ./k8-demo-catalog/demo-catalog-deployment.yaml
        shell: bash
          
          
